{"ast":null,"code":"import axios from 'axios';\n\n// Function to search for books\nexport const searchBooks = async searchTerm => {\n  try {\n    const response = await axios.get('/api/books/search', {\n      params: {\n        search_term: searchTerm\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error searching for books:', error);\n    if (error.response && error.response.data) {\n      throw new Error(error.response.data.error);\n    } else {\n      throw new Error('An unexpected error occurred.');\n    }\n  }\n};\n\n//addbooks\nexport const addBook = async bookData => {\n  try {\n    const response = await axios.post('/api/books/add-book', bookData);\n    return response.data;\n  } catch (error) {\n    console.error('Error adding book:', error);\n    if (error.response && error.response.data) {\n      throw new Error(error.response.data.error);\n    } else {\n      throw new Error('An unexpected error occurred.');\n    }\n  }\n};\nexport const fetchUserProfile = async username => {\n  try {\n    const response = await axios.get(`/api/user/${username}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching user profile:', error);\n    throw error;\n  }\n};\nconst api = axios.create({\n  baseURL: 'http://localhost:5000',\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n//Function to login\nexport const loginUser = async credentials => {\n  try {\n    const response = await api.post('/login', credentials);\n    return response.data;\n  } catch (error) {\n    throw error.response.data;\n  }\n};\nexport const registerUser = async userData => {\n  try {\n    const response = await api.post('/register', userData);\n    return response.data;\n  } catch (error) {\n    throw error.response.data;\n  }\n};\nexport default api;","map":{"version":3,"names":["axios","searchBooks","searchTerm","response","get","params","search_term","data","error","console","Error","addBook","bookData","post","fetchUserProfile","username","api","create","baseURL","headers","loginUser","credentials","registerUser","userData"],"sources":["C:/Users/ISOKEN/Readify/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\n// Function to search for books\r\nexport const searchBooks = async (searchTerm) => {\r\n    try {\r\n        const response = await axios.get('/api/books/search', {\r\n            params: { search_term: searchTerm }\r\n        });\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error('Error searching for books:', error);\r\n        if (error.response && error.response.data) {\r\n            throw new Error(error.response.data.error);\r\n        } else {\r\n            throw new Error('An unexpected error occurred.');\r\n        }\r\n    }\r\n};\r\n\r\n//addbooks\r\nexport const addBook = async (bookData) => {\r\n    try {\r\n        const response = await axios.post('/api/books/add-book', bookData);\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error('Error adding book:', error);\r\n        if (error.response && error.response.data) {\r\n            throw new Error(error.response.data.error);\r\n        } else {\r\n            throw new Error('An unexpected error occurred.');\r\n        }\r\n    }\r\n};\r\n\r\n\r\nexport const fetchUserProfile = async (username) => {\r\n    try {\r\n        const response = await axios.get(`/api/user/${username}`);\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error('Error fetching user profile:', error);\r\n        throw error;\r\n    }\r\n};\r\n\r\n\r\nconst api = axios.create({\r\n    baseURL: 'http://localhost:5000',\r\n    headers: {\r\n        'Content-Type': 'application/json',\r\n    },\r\n});\r\n\r\n//Function to login\r\nexport const loginUser = async (credentials) => {\r\n    try {\r\n        const response = await api.post('/login', credentials);\r\n        return response.data;\r\n    } catch (error) {\r\n        throw error.response.data;\r\n    }\r\n};\r\n\r\nexport const registerUser = async (userData) => {\r\n    try {\r\n        const response = await api.post('/register', userData);\r\n        return response.data;\r\n    } catch (error) {\r\n        throw error.response.data;\r\n    }\r\n};\r\n\r\nexport default api;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,OAAO,MAAMC,WAAW,GAAG,MAAOC,UAAU,IAAK;EAC7C,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAG,CAAC,mBAAmB,EAAE;MAClDC,MAAM,EAAE;QAAEC,WAAW,EAAEJ;MAAW;IACtC,CAAC,CAAC;IACF,OAAOC,QAAQ,CAACI,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;IAClD,IAAIA,KAAK,CAACL,QAAQ,IAAIK,KAAK,CAACL,QAAQ,CAACI,IAAI,EAAE;MACvC,MAAM,IAAIG,KAAK,CAACF,KAAK,CAACL,QAAQ,CAACI,IAAI,CAACC,KAAK,CAAC;IAC9C,CAAC,MAAM;MACH,MAAM,IAAIE,KAAK,CAAC,+BAA+B,CAAC;IACpD;EACJ;AACJ,CAAC;;AAED;AACA,OAAO,MAAMC,OAAO,GAAG,MAAOC,QAAQ,IAAK;EACvC,IAAI;IACA,MAAMT,QAAQ,GAAG,MAAMH,KAAK,CAACa,IAAI,CAAC,qBAAqB,EAAED,QAAQ,CAAC;IAClE,OAAOT,QAAQ,CAACI,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;IAC1C,IAAIA,KAAK,CAACL,QAAQ,IAAIK,KAAK,CAACL,QAAQ,CAACI,IAAI,EAAE;MACvC,MAAM,IAAIG,KAAK,CAACF,KAAK,CAACL,QAAQ,CAACI,IAAI,CAACC,KAAK,CAAC;IAC9C,CAAC,MAAM;MACH,MAAM,IAAIE,KAAK,CAAC,+BAA+B,CAAC;IACpD;EACJ;AACJ,CAAC;AAGD,OAAO,MAAMI,gBAAgB,GAAG,MAAOC,QAAQ,IAAK;EAChD,IAAI;IACA,MAAMZ,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAG,CAAC,aAAaW,QAAQ,EAAE,CAAC;IACzD,OAAOZ,QAAQ,CAACI,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;IACpD,MAAMA,KAAK;EACf;AACJ,CAAC;AAGD,MAAMQ,GAAG,GAAGhB,KAAK,CAACiB,MAAM,CAAC;EACrBC,OAAO,EAAE,uBAAuB;EAChCC,OAAO,EAAE;IACL,cAAc,EAAE;EACpB;AACJ,CAAC,CAAC;;AAEF;AACA,OAAO,MAAMC,SAAS,GAAG,MAAOC,WAAW,IAAK;EAC5C,IAAI;IACA,MAAMlB,QAAQ,GAAG,MAAMa,GAAG,CAACH,IAAI,CAAC,QAAQ,EAAEQ,WAAW,CAAC;IACtD,OAAOlB,QAAQ,CAACI,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZ,MAAMA,KAAK,CAACL,QAAQ,CAACI,IAAI;EAC7B;AACJ,CAAC;AAED,OAAO,MAAMe,YAAY,GAAG,MAAOC,QAAQ,IAAK;EAC5C,IAAI;IACA,MAAMpB,QAAQ,GAAG,MAAMa,GAAG,CAACH,IAAI,CAAC,WAAW,EAAEU,QAAQ,CAAC;IACtD,OAAOpB,QAAQ,CAACI,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZ,MAAMA,KAAK,CAACL,QAAQ,CAACI,IAAI;EAC7B;AACJ,CAAC;AAED,eAAeS,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}