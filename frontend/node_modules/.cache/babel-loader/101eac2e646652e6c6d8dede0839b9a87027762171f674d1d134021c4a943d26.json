{"ast":null,"code":"import axios from 'axios';\n\n//addbooks\nexport const addBook = async bookData => {\n  try {\n    const response = await axios.post('/api/books/add-book', bookData);\n    return response.data;\n  } catch (error) {\n    console.error('Error adding book:', error);\n    if (error.response && error.response.data) {\n      throw new Error(error.response.data.error);\n    } else {\n      throw new Error('An unexpected error occurred.');\n    }\n  }\n};\nexport const fetchUserProfile = async username => {\n  try {\n    const response = await axios.get(`/api/user/${username}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching user profile:', error);\n    throw error;\n  }\n};\nconst api = axios.create({\n  baseURL: 'http://localhost:5000/api',\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n//Function to login\nexport const loginUser = async credentials => {\n  try {\n    const response = await api.post('/login', credentials);\n    return response.data;\n  } catch (error) {\n    throw error.response.data;\n  }\n};\n\n//Function to register\nexport const registerUser = async userData => {\n  try {\n    const response = await api.post('/register', userData);\n    return response.data;\n  } catch (error) {\n    throw error.response.data;\n  }\n};\n\n//Search books\nexport const searchBooks = async searchTerm => {\n  try {\n    const response = await api.post('/books/search', {\n      searchTerm\n    });\n    return response.data;\n  } catch (error) {\n    console.error(error);\n    throw new Error('Failed to search books.');\n  }\n};\nexport default api;","map":{"version":3,"names":["axios","addBook","bookData","response","post","data","error","console","Error","fetchUserProfile","username","get","api","create","baseURL","headers","loginUser","credentials","registerUser","userData","searchBooks","searchTerm"],"sources":["C:/Users/ISOKEN/Readify/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\n//addbooks\r\nexport const addBook = async (bookData) => {\r\n    try {\r\n        const response = await axios.post('/api/books/add-book', bookData);\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error('Error adding book:', error);\r\n        if (error.response && error.response.data) {\r\n            throw new Error(error.response.data.error);\r\n        } else {\r\n            throw new Error('An unexpected error occurred.');\r\n        }\r\n    }\r\n};\r\n\r\n\r\nexport const fetchUserProfile = async (username) => {\r\n    try {\r\n        const response = await axios.get(`/api/user/${username}`);\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error('Error fetching user profile:', error);\r\n        throw error;\r\n    }\r\n};\r\n\r\n\r\nconst api = axios.create({\r\n    baseURL: 'http://localhost:5000/api',\r\n    headers: {\r\n        'Content-Type': 'application/json',\r\n    },\r\n});\r\n\r\n//Function to login\r\nexport const loginUser = async (credentials) => {\r\n    try {\r\n        const response = await api.post('/login', credentials);\r\n        return response.data;\r\n    } catch (error) {\r\n        throw error.response.data;\r\n    }\r\n};\r\n\r\n//Function to register\r\nexport const registerUser = async (userData) => {\r\n    try {\r\n        const response = await api.post('/register', userData);\r\n        return response.data;\r\n    } catch (error) {\r\n        throw error.response.data;\r\n    }\r\n};\r\n\r\n//Search books\r\nexport const searchBooks = async (searchTerm) => {\r\n    try {\r\n      const response = await api.post('/books/search', { searchTerm });\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error(error);\r\n      throw new Error('Failed to search books.');\r\n    }\r\n  };\r\n\r\nexport default api;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,OAAO,MAAMC,OAAO,GAAG,MAAOC,QAAQ,IAAK;EACvC,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMH,KAAK,CAACI,IAAI,CAAC,qBAAqB,EAAEF,QAAQ,CAAC;IAClE,OAAOC,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;IAC1C,IAAIA,KAAK,CAACH,QAAQ,IAAIG,KAAK,CAACH,QAAQ,CAACE,IAAI,EAAE;MACvC,MAAM,IAAIG,KAAK,CAACF,KAAK,CAACH,QAAQ,CAACE,IAAI,CAACC,KAAK,CAAC;IAC9C,CAAC,MAAM;MACH,MAAM,IAAIE,KAAK,CAAC,+BAA+B,CAAC;IACpD;EACJ;AACJ,CAAC;AAGD,OAAO,MAAMC,gBAAgB,GAAG,MAAOC,QAAQ,IAAK;EAChD,IAAI;IACA,MAAMP,QAAQ,GAAG,MAAMH,KAAK,CAACW,GAAG,CAAC,aAAaD,QAAQ,EAAE,CAAC;IACzD,OAAOP,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;IACpD,MAAMA,KAAK;EACf;AACJ,CAAC;AAGD,MAAMM,GAAG,GAAGZ,KAAK,CAACa,MAAM,CAAC;EACrBC,OAAO,EAAE,2BAA2B;EACpCC,OAAO,EAAE;IACL,cAAc,EAAE;EACpB;AACJ,CAAC,CAAC;;AAEF;AACA,OAAO,MAAMC,SAAS,GAAG,MAAOC,WAAW,IAAK;EAC5C,IAAI;IACA,MAAMd,QAAQ,GAAG,MAAMS,GAAG,CAACR,IAAI,CAAC,QAAQ,EAAEa,WAAW,CAAC;IACtD,OAAOd,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZ,MAAMA,KAAK,CAACH,QAAQ,CAACE,IAAI;EAC7B;AACJ,CAAC;;AAED;AACA,OAAO,MAAMa,YAAY,GAAG,MAAOC,QAAQ,IAAK;EAC5C,IAAI;IACA,MAAMhB,QAAQ,GAAG,MAAMS,GAAG,CAACR,IAAI,CAAC,WAAW,EAAEe,QAAQ,CAAC;IACtD,OAAOhB,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZ,MAAMA,KAAK,CAACH,QAAQ,CAACE,IAAI;EAC7B;AACJ,CAAC;;AAED;AACA,OAAO,MAAMe,WAAW,GAAG,MAAOC,UAAU,IAAK;EAC7C,IAAI;IACF,MAAMlB,QAAQ,GAAG,MAAMS,GAAG,CAACR,IAAI,CAAC,eAAe,EAAE;MAAEiB;IAAW,CAAC,CAAC;IAChE,OAAOlB,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACpB,MAAM,IAAIE,KAAK,CAAC,yBAAyB,CAAC;EAC5C;AACF,CAAC;AAEH,eAAeI,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}