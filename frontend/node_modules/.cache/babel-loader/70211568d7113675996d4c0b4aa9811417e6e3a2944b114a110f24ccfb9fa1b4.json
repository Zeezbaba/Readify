{"ast":null,"code":"const API_BASE_URL = process.env.REACT_APP_API_BASE_URL || 'http://localhost:5000';\nexport const fetchBooks = async query => {\n  try {\n    const response = await fetch(`${API_BASE_URL}/api/books/search?title=${query}`, {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    const data = await response.json();\n    return data.map(book => ({\n      title: book.title,\n      author: book.author_name ? book.author_name.join(', ') : 'Unknown Author',\n      coverUrl: book.cover_image_url\n    }));\n  } catch (error) {\n    console.error('Error fetching books:', error);\n    return [];\n  }\n};\n\n//addbooks\nexport const addBook = async book => {\n  try {\n    const response = await fetch(`${API_BASE_URL}/api/addbook`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(book)\n    });\n    const data = await response.json();\n    if (response.status === 201) {\n      return {\n        success: true,\n        message: data.message\n      };\n    } else {\n      return {\n        success: false,\n        message: 'Failed to add book'\n      };\n    }\n  } catch (error) {\n    console.error('Error adding book:', error);\n    return {\n      success: false,\n      message: 'Error adding book'\n    };\n  }\n};","map":{"version":3,"names":["API_BASE_URL","process","env","REACT_APP_API_BASE_URL","fetchBooks","query","response","fetch","headers","data","json","map","book","title","author","author_name","join","coverUrl","cover_image_url","error","console","addBook","method","body","JSON","stringify","status","success","message"],"sources":["C:/Users/ISOKEN/Readify/frontend/src/services/api.js"],"sourcesContent":["const API_BASE_URL = process.env.REACT_APP_API_BASE_URL || 'http://localhost:5000';\r\n\r\nexport const fetchBooks = async (query) => {\r\n    try {\r\n        const response = await fetch(`${API_BASE_URL}/api/books/search?title=${query}`, {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        });\r\n        const data = await response.json();\r\n\r\n        return data.map(book => ({\r\n            title: book.title,\r\n            author: book.author_name ? book.author_name.join(', ') : 'Unknown Author',\r\n            coverUrl: book.cover_image_url,\r\n        }));\r\n    } catch (error) {\r\n        console.error('Error fetching books:', error);\r\n        return [];\r\n    }\r\n};\r\n\r\n//addbooks\r\nexport const addBook = async (book) => {\r\n    try {\r\n        const response = await fetch(`${API_BASE_URL}/api/addbook`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(book),\r\n        });\r\n\r\n        const data = await response.json();\r\n        if (response.status === 201) {\r\n            return { success: true, message: data.message };\r\n        } else {\r\n            return { success: false, message: 'Failed to add book' };\r\n        }\r\n    } catch (error) {\r\n        console.error('Error adding book:', error);\r\n        return { success: false, message: 'Error adding book' };\r\n    }\r\n};"],"mappings":"AAAA,MAAMA,YAAY,GAAGC,OAAO,CAACC,GAAG,CAACC,sBAAsB,IAAI,uBAAuB;AAElF,OAAO,MAAMC,UAAU,GAAG,MAAOC,KAAK,IAAK;EACvC,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGP,YAAY,2BAA2BK,KAAK,EAAE,EAAE;MAC5EG,OAAO,EAAE;QACL,cAAc,EAAE;MACpB;IACJ,CAAC,CAAC;IACF,MAAMC,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;IAElC,OAAOD,IAAI,CAACE,GAAG,CAACC,IAAI,KAAK;MACrBC,KAAK,EAAED,IAAI,CAACC,KAAK;MACjBC,MAAM,EAAEF,IAAI,CAACG,WAAW,GAAGH,IAAI,CAACG,WAAW,CAACC,IAAI,CAAC,IAAI,CAAC,GAAG,gBAAgB;MACzEC,QAAQ,EAAEL,IAAI,CAACM;IACnB,CAAC,CAAC,CAAC;EACP,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC7C,OAAO,EAAE;EACb;AACJ,CAAC;;AAED;AACA,OAAO,MAAME,OAAO,GAAG,MAAOT,IAAI,IAAK;EACnC,IAAI;IACA,MAAMN,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGP,YAAY,cAAc,EAAE;MACxDsB,MAAM,EAAE,MAAM;MACdd,OAAO,EAAE;QACL,cAAc,EAAE;MACpB,CAAC;MACDe,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACb,IAAI;IAC7B,CAAC,CAAC;IAEF,MAAMH,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;IAClC,IAAIJ,QAAQ,CAACoB,MAAM,KAAK,GAAG,EAAE;MACzB,OAAO;QAAEC,OAAO,EAAE,IAAI;QAAEC,OAAO,EAAEnB,IAAI,CAACmB;MAAQ,CAAC;IACnD,CAAC,MAAM;MACH,OAAO;QAAED,OAAO,EAAE,KAAK;QAAEC,OAAO,EAAE;MAAqB,CAAC;IAC5D;EACJ,CAAC,CAAC,OAAOT,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;IAC1C,OAAO;MAAEQ,OAAO,EAAE,KAAK;MAAEC,OAAO,EAAE;IAAoB,CAAC;EAC3D;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}